# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import geometry_pb2 as geometry__pb2

GRPC_GENERATED_VERSION = '1.69.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in geometry_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class GeometryStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SetTablePosition = channel.unary_unary(
                '/mentice.geometry.v1.Geometry/SetTablePosition',
                request_serializer=geometry__pb2.SetTablePositionRequest.SerializeToString,
                response_deserializer=geometry__pb2.SetTablePositionResponse.FromString,
                _registered_method=True)
        self.GetTablePosition = channel.unary_unary(
                '/mentice.geometry.v1.Geometry/GetTablePosition',
                request_serializer=geometry__pb2.GetTablePositionRequest.SerializeToString,
                response_deserializer=geometry__pb2.GetTablePositionResponse.FromString,
                _registered_method=True)
        self.GetTablePositionStream = channel.unary_stream(
                '/mentice.geometry.v1.Geometry/GetTablePositionStream',
                request_serializer=geometry__pb2.GetTablePositionRequest.SerializeToString,
                response_deserializer=geometry__pb2.GetTablePositionResponse.FromString,
                _registered_method=True)
        self.SetTableRotation = channel.unary_unary(
                '/mentice.geometry.v1.Geometry/SetTableRotation',
                request_serializer=geometry__pb2.SetTableRotationRequest.SerializeToString,
                response_deserializer=geometry__pb2.SetTableRotationResponse.FromString,
                _registered_method=True)
        self.GetTableRotation = channel.unary_unary(
                '/mentice.geometry.v1.Geometry/GetTableRotation',
                request_serializer=geometry__pb2.GetTableRotationRequest.SerializeToString,
                response_deserializer=geometry__pb2.GetTableRotationResponse.FromString,
                _registered_method=True)
        self.GetTableRotationStream = channel.unary_stream(
                '/mentice.geometry.v1.Geometry/GetTableRotationStream',
                request_serializer=geometry__pb2.GetTableRotationRequest.SerializeToString,
                response_deserializer=geometry__pb2.GetTableRotationResponse.FromString,
                _registered_method=True)
        self.SetCarmRotation = channel.unary_unary(
                '/mentice.geometry.v1.Geometry/SetCarmRotation',
                request_serializer=geometry__pb2.SetCarmRotationRequest.SerializeToString,
                response_deserializer=geometry__pb2.SetCarmRotationResponse.FromString,
                _registered_method=True)
        self.GetCarmRotation = channel.unary_unary(
                '/mentice.geometry.v1.Geometry/GetCarmRotation',
                request_serializer=geometry__pb2.GetCarmRotationRequest.SerializeToString,
                response_deserializer=geometry__pb2.GetCarmRotationResponse.FromString,
                _registered_method=True)
        self.GetCarmRotationStream = channel.unary_stream(
                '/mentice.geometry.v1.Geometry/GetCarmRotationStream',
                request_serializer=geometry__pb2.GetCarmRotationRequest.SerializeToString,
                response_deserializer=geometry__pb2.GetCarmRotationResponse.FromString,
                _registered_method=True)
        self.SetDetectorRotation = channel.unary_unary(
                '/mentice.geometry.v1.Geometry/SetDetectorRotation',
                request_serializer=geometry__pb2.SetDetectorRotationRequest.SerializeToString,
                response_deserializer=geometry__pb2.SetDetectorRotationResponse.FromString,
                _registered_method=True)
        self.GetDetectorRotation = channel.unary_unary(
                '/mentice.geometry.v1.Geometry/GetDetectorRotation',
                request_serializer=geometry__pb2.GetDetectorRotationRequest.SerializeToString,
                response_deserializer=geometry__pb2.GetDetectorRotationResponse.FromString,
                _registered_method=True)
        self.GetDetectorRotationStream = channel.unary_stream(
                '/mentice.geometry.v1.Geometry/GetDetectorRotationStream',
                request_serializer=geometry__pb2.GetDetectorRotationRequest.SerializeToString,
                response_deserializer=geometry__pb2.GetDetectorRotationResponse.FromString,
                _registered_method=True)
        self.SetZoom = channel.unary_unary(
                '/mentice.geometry.v1.Geometry/SetZoom',
                request_serializer=geometry__pb2.SetZoomRequest.SerializeToString,
                response_deserializer=geometry__pb2.SetZoomResponse.FromString,
                _registered_method=True)
        self.GetZoom = channel.unary_unary(
                '/mentice.geometry.v1.Geometry/GetZoom',
                request_serializer=geometry__pb2.GetZoomRequest.SerializeToString,
                response_deserializer=geometry__pb2.GetZoomResponse.FromString,
                _registered_method=True)
        self.GetZoomStream = channel.unary_stream(
                '/mentice.geometry.v1.Geometry/GetZoomStream',
                request_serializer=geometry__pb2.GetZoomRequest.SerializeToString,
                response_deserializer=geometry__pb2.GetZoomResponse.FromString,
                _registered_method=True)
        self.SetSourceOffset = channel.unary_unary(
                '/mentice.geometry.v1.Geometry/SetSourceOffset',
                request_serializer=geometry__pb2.SetSourceOffsetRequest.SerializeToString,
                response_deserializer=geometry__pb2.SetSourceOffsetResponse.FromString,
                _registered_method=True)
        self.GetSourceOffset = channel.unary_unary(
                '/mentice.geometry.v1.Geometry/GetSourceOffset',
                request_serializer=geometry__pb2.GetSourceOffsetRequest.SerializeToString,
                response_deserializer=geometry__pb2.GetSourceOffsetResponse.FromString,
                _registered_method=True)
        self.GetSourceOffsetStream = channel.unary_stream(
                '/mentice.geometry.v1.Geometry/GetSourceOffsetStream',
                request_serializer=geometry__pb2.GetSourceOffsetRequest.SerializeToString,
                response_deserializer=geometry__pb2.GetSourceOffsetResponse.FromString,
                _registered_method=True)
        self.SetDetectorOffset = channel.unary_unary(
                '/mentice.geometry.v1.Geometry/SetDetectorOffset',
                request_serializer=geometry__pb2.SetDetectorOffsetRequest.SerializeToString,
                response_deserializer=geometry__pb2.SetDetectorOffsetResponse.FromString,
                _registered_method=True)
        self.GetDetectorOffset = channel.unary_unary(
                '/mentice.geometry.v1.Geometry/GetDetectorOffset',
                request_serializer=geometry__pb2.GetDetectorOffsetRequest.SerializeToString,
                response_deserializer=geometry__pb2.GetDetectorOffsetResponse.FromString,
                _registered_method=True)
        self.GetDetectorOffsetStream = channel.unary_stream(
                '/mentice.geometry.v1.Geometry/GetDetectorOffsetStream',
                request_serializer=geometry__pb2.GetDetectorOffsetRequest.SerializeToString,
                response_deserializer=geometry__pb2.GetDetectorOffsetResponse.FromString,
                _registered_method=True)
        self.GetTransforms = channel.unary_unary(
                '/mentice.geometry.v1.Geometry/GetTransforms',
                request_serializer=geometry__pb2.GetTransformsRequest.SerializeToString,
                response_deserializer=geometry__pb2.GetTransformsResponse.FromString,
                _registered_method=True)
        self.GetTransformsStream = channel.unary_stream(
                '/mentice.geometry.v1.Geometry/GetTransformsStream',
                request_serializer=geometry__pb2.GetTransformsRequest.SerializeToString,
                response_deserializer=geometry__pb2.GetTransformsResponse.FromString,
                _registered_method=True)
        self.Set3dRATrajectory = channel.unary_unary(
                '/mentice.geometry.v1.Geometry/Set3dRATrajectory',
                request_serializer=geometry__pb2.Set3dRATrajectoryRequest.SerializeToString,
                response_deserializer=geometry__pb2.Set3dRATrajectoryResponse.FromString,
                _registered_method=True)


class GeometryServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SetTablePosition(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTablePosition(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTablePositionStream(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetTableRotation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTableRotation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTableRotationStream(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetCarmRotation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCarmRotation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCarmRotationStream(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetDetectorRotation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDetectorRotation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDetectorRotationStream(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetZoom(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetZoom(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetZoomStream(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetSourceOffset(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSourceOffset(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSourceOffsetStream(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetDetectorOffset(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDetectorOffset(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDetectorOffsetStream(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTransforms(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTransformsStream(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Set3dRATrajectory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GeometryServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SetTablePosition': grpc.unary_unary_rpc_method_handler(
                    servicer.SetTablePosition,
                    request_deserializer=geometry__pb2.SetTablePositionRequest.FromString,
                    response_serializer=geometry__pb2.SetTablePositionResponse.SerializeToString,
            ),
            'GetTablePosition': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTablePosition,
                    request_deserializer=geometry__pb2.GetTablePositionRequest.FromString,
                    response_serializer=geometry__pb2.GetTablePositionResponse.SerializeToString,
            ),
            'GetTablePositionStream': grpc.unary_stream_rpc_method_handler(
                    servicer.GetTablePositionStream,
                    request_deserializer=geometry__pb2.GetTablePositionRequest.FromString,
                    response_serializer=geometry__pb2.GetTablePositionResponse.SerializeToString,
            ),
            'SetTableRotation': grpc.unary_unary_rpc_method_handler(
                    servicer.SetTableRotation,
                    request_deserializer=geometry__pb2.SetTableRotationRequest.FromString,
                    response_serializer=geometry__pb2.SetTableRotationResponse.SerializeToString,
            ),
            'GetTableRotation': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTableRotation,
                    request_deserializer=geometry__pb2.GetTableRotationRequest.FromString,
                    response_serializer=geometry__pb2.GetTableRotationResponse.SerializeToString,
            ),
            'GetTableRotationStream': grpc.unary_stream_rpc_method_handler(
                    servicer.GetTableRotationStream,
                    request_deserializer=geometry__pb2.GetTableRotationRequest.FromString,
                    response_serializer=geometry__pb2.GetTableRotationResponse.SerializeToString,
            ),
            'SetCarmRotation': grpc.unary_unary_rpc_method_handler(
                    servicer.SetCarmRotation,
                    request_deserializer=geometry__pb2.SetCarmRotationRequest.FromString,
                    response_serializer=geometry__pb2.SetCarmRotationResponse.SerializeToString,
            ),
            'GetCarmRotation': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCarmRotation,
                    request_deserializer=geometry__pb2.GetCarmRotationRequest.FromString,
                    response_serializer=geometry__pb2.GetCarmRotationResponse.SerializeToString,
            ),
            'GetCarmRotationStream': grpc.unary_stream_rpc_method_handler(
                    servicer.GetCarmRotationStream,
                    request_deserializer=geometry__pb2.GetCarmRotationRequest.FromString,
                    response_serializer=geometry__pb2.GetCarmRotationResponse.SerializeToString,
            ),
            'SetDetectorRotation': grpc.unary_unary_rpc_method_handler(
                    servicer.SetDetectorRotation,
                    request_deserializer=geometry__pb2.SetDetectorRotationRequest.FromString,
                    response_serializer=geometry__pb2.SetDetectorRotationResponse.SerializeToString,
            ),
            'GetDetectorRotation': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDetectorRotation,
                    request_deserializer=geometry__pb2.GetDetectorRotationRequest.FromString,
                    response_serializer=geometry__pb2.GetDetectorRotationResponse.SerializeToString,
            ),
            'GetDetectorRotationStream': grpc.unary_stream_rpc_method_handler(
                    servicer.GetDetectorRotationStream,
                    request_deserializer=geometry__pb2.GetDetectorRotationRequest.FromString,
                    response_serializer=geometry__pb2.GetDetectorRotationResponse.SerializeToString,
            ),
            'SetZoom': grpc.unary_unary_rpc_method_handler(
                    servicer.SetZoom,
                    request_deserializer=geometry__pb2.SetZoomRequest.FromString,
                    response_serializer=geometry__pb2.SetZoomResponse.SerializeToString,
            ),
            'GetZoom': grpc.unary_unary_rpc_method_handler(
                    servicer.GetZoom,
                    request_deserializer=geometry__pb2.GetZoomRequest.FromString,
                    response_serializer=geometry__pb2.GetZoomResponse.SerializeToString,
            ),
            'GetZoomStream': grpc.unary_stream_rpc_method_handler(
                    servicer.GetZoomStream,
                    request_deserializer=geometry__pb2.GetZoomRequest.FromString,
                    response_serializer=geometry__pb2.GetZoomResponse.SerializeToString,
            ),
            'SetSourceOffset': grpc.unary_unary_rpc_method_handler(
                    servicer.SetSourceOffset,
                    request_deserializer=geometry__pb2.SetSourceOffsetRequest.FromString,
                    response_serializer=geometry__pb2.SetSourceOffsetResponse.SerializeToString,
            ),
            'GetSourceOffset': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSourceOffset,
                    request_deserializer=geometry__pb2.GetSourceOffsetRequest.FromString,
                    response_serializer=geometry__pb2.GetSourceOffsetResponse.SerializeToString,
            ),
            'GetSourceOffsetStream': grpc.unary_stream_rpc_method_handler(
                    servicer.GetSourceOffsetStream,
                    request_deserializer=geometry__pb2.GetSourceOffsetRequest.FromString,
                    response_serializer=geometry__pb2.GetSourceOffsetResponse.SerializeToString,
            ),
            'SetDetectorOffset': grpc.unary_unary_rpc_method_handler(
                    servicer.SetDetectorOffset,
                    request_deserializer=geometry__pb2.SetDetectorOffsetRequest.FromString,
                    response_serializer=geometry__pb2.SetDetectorOffsetResponse.SerializeToString,
            ),
            'GetDetectorOffset': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDetectorOffset,
                    request_deserializer=geometry__pb2.GetDetectorOffsetRequest.FromString,
                    response_serializer=geometry__pb2.GetDetectorOffsetResponse.SerializeToString,
            ),
            'GetDetectorOffsetStream': grpc.unary_stream_rpc_method_handler(
                    servicer.GetDetectorOffsetStream,
                    request_deserializer=geometry__pb2.GetDetectorOffsetRequest.FromString,
                    response_serializer=geometry__pb2.GetDetectorOffsetResponse.SerializeToString,
            ),
            'GetTransforms': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTransforms,
                    request_deserializer=geometry__pb2.GetTransformsRequest.FromString,
                    response_serializer=geometry__pb2.GetTransformsResponse.SerializeToString,
            ),
            'GetTransformsStream': grpc.unary_stream_rpc_method_handler(
                    servicer.GetTransformsStream,
                    request_deserializer=geometry__pb2.GetTransformsRequest.FromString,
                    response_serializer=geometry__pb2.GetTransformsResponse.SerializeToString,
            ),
            'Set3dRATrajectory': grpc.unary_unary_rpc_method_handler(
                    servicer.Set3dRATrajectory,
                    request_deserializer=geometry__pb2.Set3dRATrajectoryRequest.FromString,
                    response_serializer=geometry__pb2.Set3dRATrajectoryResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'mentice.geometry.v1.Geometry', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('mentice.geometry.v1.Geometry', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class Geometry(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SetTablePosition(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mentice.geometry.v1.Geometry/SetTablePosition',
            geometry__pb2.SetTablePositionRequest.SerializeToString,
            geometry__pb2.SetTablePositionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetTablePosition(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mentice.geometry.v1.Geometry/GetTablePosition',
            geometry__pb2.GetTablePositionRequest.SerializeToString,
            geometry__pb2.GetTablePositionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetTablePositionStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/mentice.geometry.v1.Geometry/GetTablePositionStream',
            geometry__pb2.GetTablePositionRequest.SerializeToString,
            geometry__pb2.GetTablePositionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetTableRotation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mentice.geometry.v1.Geometry/SetTableRotation',
            geometry__pb2.SetTableRotationRequest.SerializeToString,
            geometry__pb2.SetTableRotationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetTableRotation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mentice.geometry.v1.Geometry/GetTableRotation',
            geometry__pb2.GetTableRotationRequest.SerializeToString,
            geometry__pb2.GetTableRotationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetTableRotationStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/mentice.geometry.v1.Geometry/GetTableRotationStream',
            geometry__pb2.GetTableRotationRequest.SerializeToString,
            geometry__pb2.GetTableRotationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetCarmRotation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mentice.geometry.v1.Geometry/SetCarmRotation',
            geometry__pb2.SetCarmRotationRequest.SerializeToString,
            geometry__pb2.SetCarmRotationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetCarmRotation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mentice.geometry.v1.Geometry/GetCarmRotation',
            geometry__pb2.GetCarmRotationRequest.SerializeToString,
            geometry__pb2.GetCarmRotationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetCarmRotationStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/mentice.geometry.v1.Geometry/GetCarmRotationStream',
            geometry__pb2.GetCarmRotationRequest.SerializeToString,
            geometry__pb2.GetCarmRotationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetDetectorRotation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mentice.geometry.v1.Geometry/SetDetectorRotation',
            geometry__pb2.SetDetectorRotationRequest.SerializeToString,
            geometry__pb2.SetDetectorRotationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetDetectorRotation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mentice.geometry.v1.Geometry/GetDetectorRotation',
            geometry__pb2.GetDetectorRotationRequest.SerializeToString,
            geometry__pb2.GetDetectorRotationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetDetectorRotationStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/mentice.geometry.v1.Geometry/GetDetectorRotationStream',
            geometry__pb2.GetDetectorRotationRequest.SerializeToString,
            geometry__pb2.GetDetectorRotationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetZoom(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mentice.geometry.v1.Geometry/SetZoom',
            geometry__pb2.SetZoomRequest.SerializeToString,
            geometry__pb2.SetZoomResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetZoom(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mentice.geometry.v1.Geometry/GetZoom',
            geometry__pb2.GetZoomRequest.SerializeToString,
            geometry__pb2.GetZoomResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetZoomStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/mentice.geometry.v1.Geometry/GetZoomStream',
            geometry__pb2.GetZoomRequest.SerializeToString,
            geometry__pb2.GetZoomResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetSourceOffset(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mentice.geometry.v1.Geometry/SetSourceOffset',
            geometry__pb2.SetSourceOffsetRequest.SerializeToString,
            geometry__pb2.SetSourceOffsetResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetSourceOffset(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mentice.geometry.v1.Geometry/GetSourceOffset',
            geometry__pb2.GetSourceOffsetRequest.SerializeToString,
            geometry__pb2.GetSourceOffsetResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetSourceOffsetStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/mentice.geometry.v1.Geometry/GetSourceOffsetStream',
            geometry__pb2.GetSourceOffsetRequest.SerializeToString,
            geometry__pb2.GetSourceOffsetResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetDetectorOffset(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mentice.geometry.v1.Geometry/SetDetectorOffset',
            geometry__pb2.SetDetectorOffsetRequest.SerializeToString,
            geometry__pb2.SetDetectorOffsetResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetDetectorOffset(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mentice.geometry.v1.Geometry/GetDetectorOffset',
            geometry__pb2.GetDetectorOffsetRequest.SerializeToString,
            geometry__pb2.GetDetectorOffsetResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetDetectorOffsetStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/mentice.geometry.v1.Geometry/GetDetectorOffsetStream',
            geometry__pb2.GetDetectorOffsetRequest.SerializeToString,
            geometry__pb2.GetDetectorOffsetResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetTransforms(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mentice.geometry.v1.Geometry/GetTransforms',
            geometry__pb2.GetTransformsRequest.SerializeToString,
            geometry__pb2.GetTransformsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetTransformsStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/mentice.geometry.v1.Geometry/GetTransformsStream',
            geometry__pb2.GetTransformsRequest.SerializeToString,
            geometry__pb2.GetTransformsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Set3dRATrajectory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mentice.geometry.v1.Geometry/Set3dRATrajectory',
            geometry__pb2.Set3dRATrajectoryRequest.SerializeToString,
            geometry__pb2.Set3dRATrajectoryResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
